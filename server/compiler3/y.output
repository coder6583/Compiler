Terminals unused in grammar

    LBRACK
    RBRACK
    ARRAY


State 83 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declare
    2        | funcDec
    3        | declare program
    4        | funcDec program

    5 exp: INT
    6    | STRING
    7    | REAL
    8    | NUL
    9    | lvalue
   10    | assignExp
   11    | exp PLUS exp
   12    | exp MINUS exp
   13    | exp TIMES exp
   14    | exp DIVIDE exp
   15    | MINUS exp
   16    | exp EQ exp
   17    | exp NEQ exp
   18    | exp GE exp
   19    | exp GT exp
   20    | exp LE exp
   21    | exp LT exp
   22    | id LPAREN explist RPAREN
   23    | LPAREN exp RPAREN
   24    | exp AND exp
   25    | exp OR exp

   26 assignExp: lvalue ASSIGN exp

   27 stm: funcDec
   28    | funcCall SEMICOLON
   29    | assign SEMICOLON
   30    | declare
   31    | if
   32    | while
   33    | for
   34    | return SEMICOLON
   35    | BREAK SEMICOLON
   36    | CONTINUE SEMICOLON

   37 stmlist: %empty
   38        | stm stmlist

   39 return: LPAREN exp RPAREN RETURN

   40 type: id
   41     | VOID
   42     | INTTYPE
   43     | STRINGTYPE
   44     | REALTYPE

   45 tyfield: %empty
   46        | tyfield1

   47 tyfield1: type COLON id
   48         | type COLON id COMMA tyfield1

   49 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN LBRACE stmlist RBRACE

   50 funcCall: id LPAREN RPAREN
   51         | id LPAREN explist RPAREN

   52 assign: lvalue ASSIGN exp
   53       | lvalue PLUS PLUS
   54       | lvalue MINUS MINUS

   55 declare: type COLON assign SEMICOLON
   56        | type COLON lvalue SEMICOLON
   57        | TYPE COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON

   58 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE
   59   | IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

   60 while: LPAREN exp RPAREN TO LBRACE stmlist RBRACE

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

   62 explist: exp COMMA explist
   63        | exp

   64 id: ID

   65 lvalue: id
   66       | lvalue DOT id


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 64
    STRING <sval> (259) 6
    INT <ival> (260) 5
    REAL <fval> (261) 7
    COMMA (262) 48 62
    COLON (263) 47 48 49 55 56 57
    SEMICOLON (264) 28 29 34 35 36 55 56 57
    LPAREN (265) 22 23 39 49 50 51 58 59 60 61
    RPAREN (266) 22 23 39 49 50 51 58 59 60 61
    LBRACK (267)
    RBRACK (268)
    LBRACE (269) 49 57 58 59 60 61
    RBRACE (270) 49 57 58 59 60 61
    DOT (271) 66
    PLUS (272) 11 53
    MINUS (273) 12 15 54
    TIMES (274) 13
    DIVIDE (275) 14
    EQ (276) 16
    NEQ (277) 17
    LT (278) 21
    LE (279) 20
    GT (280) 19
    GE (281) 18
    AND (282) 24
    OR (283) 25
    ASSIGN (284) 26 49 52 57
    ARRAY (285)
    IF (286) 58 59
    THEN (287) 58 59
    ELSE (288) 59
    FROM (289) 61
    TO (290) 60 61
    BREAK (291) 35
    INTTYPE (292) 42
    STRINGTYPE (293) 43
    REALTYPE (294) 44
    CONTINUE (295) 36
    RETURN (296) 39
    TYPE (297) 57
    VOID (298) 41
    NUL (299) 8
    UMINUS (300)
    LOWER_THAN_ELSE (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1 2 3 4
        on right: 0 3 4
    exp <exp> (49)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
        on right: 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 39 52 58 59 60 61 62 63
    assignExp <exp> (50)
        on left: 26
        on right: 10
    stm <stm> (51)
        on left: 27 28 29 30 31 32 33 34 35 36
        on right: 38 59
    stmlist <stm> (52)
        on left: 37 38
        on right: 38 49 58 59 60 61
    return <stm> (53)
        on left: 39
        on right: 34
    type <type> (54)
        on left: 40 41 42 43 44
        on right: 47 48 49 55 56
    tyfield <fieldList> (55)
        on left: 45 46
        on right: 49 57
    tyfield1 <fieldList> (56)
        on left: 47 48
        on right: 46 48
    funcDec <funcdec> (57)
        on left: 49
        on right: 2 4 27
    funcCall <stm> (58)
        on left: 50 51
        on right: 28
    assign <stm> (59)
        on left: 52 53 54
        on right: 29 55 61
    declare <dec> (60)
        on left: 55 56 57
        on right: 1 3 30
    if <stm> (61)
        on left: 58 59
        on right: 31
    while <stm> (62)
        on left: 60
        on right: 32
    for <stm> (63)
        on left: 61
        on right: 33
    explist <expList> (64)
        on left: 62 63
        on right: 22 51 62
    id <sym> (65)
        on left: 64
        on right: 22 40 47 48 49 50 51 57 65 66
    lvalue <var> (66)
        on left: 65 66
        on right: 9 26 52 53 54 56 66


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    program  go to state 7
    type     go to state 8
    funcDec  go to state 9
    declare  go to state 10
    id       go to state 11


State 1

   64 id: ID .

    $default  reduce using rule 64 (id)


State 2

   42 type: INTTYPE .

    $default  reduce using rule 42 (type)


State 3

   43 type: STRINGTYPE .

    $default  reduce using rule 43 (type)


State 4

   44 type: REALTYPE .

    $default  reduce using rule 44 (type)


State 5

   57 declare: TYPE . COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON

    COLON  shift, and go to state 12


State 6

   41 type: VOID .

    $default  reduce using rule 41 (type)


State 7

    0 $accept: program . $end

    $end  shift, and go to state 13


State 8

   49 funcDec: type . COLON id LPAREN tyfield RPAREN ASSIGN LBRACE stmlist RBRACE
   55 declare: type . COLON assign SEMICOLON
   56        | type . COLON lvalue SEMICOLON

    COLON  shift, and go to state 14


State 9

    2 program: funcDec .
    4        | funcDec . program

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 2 (program)

    program  go to state 15
    type     go to state 8
    funcDec  go to state 9
    declare  go to state 10
    id       go to state 11


State 10

    1 program: declare .
    3        | declare . program

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 1 (program)

    program  go to state 16
    type     go to state 8
    funcDec  go to state 9
    declare  go to state 10
    id       go to state 11


State 11

   40 type: id .

    $default  reduce using rule 40 (type)


State 12

   57 declare: TYPE COLON . id ASSIGN LBRACE tyfield RBRACE SEMICOLON

    ID  shift, and go to state 1

    id  go to state 17


State 13

    0 $accept: program $end .

    $default  accept


State 14

   49 funcDec: type COLON . id LPAREN tyfield RPAREN ASSIGN LBRACE stmlist RBRACE
   55 declare: type COLON . assign SEMICOLON
   56        | type COLON . lvalue SEMICOLON

    ID  shift, and go to state 1

    assign  go to state 18
    id      go to state 19
    lvalue  go to state 20


State 15

    4 program: funcDec program .

    $default  reduce using rule 4 (program)


State 16

    3 program: declare program .

    $default  reduce using rule 3 (program)


State 17

   57 declare: TYPE COLON id . ASSIGN LBRACE tyfield RBRACE SEMICOLON

    ASSIGN  shift, and go to state 21


State 18

   55 declare: type COLON assign . SEMICOLON

    SEMICOLON  shift, and go to state 22


State 19

   49 funcDec: type COLON id . LPAREN tyfield RPAREN ASSIGN LBRACE stmlist RBRACE
   65 lvalue: id .

    LPAREN  shift, and go to state 23

    $default  reduce using rule 65 (lvalue)


State 20

   52 assign: lvalue . ASSIGN exp
   53       | lvalue . PLUS PLUS
   54       | lvalue . MINUS MINUS
   56 declare: type COLON lvalue . SEMICOLON
   66 lvalue: lvalue . DOT id

    SEMICOLON  shift, and go to state 24
    DOT        shift, and go to state 25
    PLUS       shift, and go to state 26
    MINUS      shift, and go to state 27
    ASSIGN     shift, and go to state 28


State 21

   57 declare: TYPE COLON id ASSIGN . LBRACE tyfield RBRACE SEMICOLON

    LBRACE  shift, and go to state 29


State 22

   55 declare: type COLON assign SEMICOLON .

    $default  reduce using rule 55 (declare)


State 23

   49 funcDec: type COLON id LPAREN . tyfield RPAREN ASSIGN LBRACE stmlist RBRACE

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6

    $default  reduce using rule 45 (tyfield)

    type      go to state 30
    tyfield   go to state 31
    tyfield1  go to state 32
    id        go to state 11


State 24

   56 declare: type COLON lvalue SEMICOLON .

    $default  reduce using rule 56 (declare)


State 25

   66 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 33


State 26

   53 assign: lvalue PLUS . PLUS

    PLUS  shift, and go to state 34


State 27

   54 assign: lvalue MINUS . MINUS

    MINUS  shift, and go to state 35


State 28

   52 assign: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 42
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 29

   57 declare: TYPE COLON id ASSIGN LBRACE . tyfield RBRACE SEMICOLON

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6

    $default  reduce using rule 45 (tyfield)

    type      go to state 30
    tyfield   go to state 46
    tyfield1  go to state 32
    id        go to state 11


State 30

   47 tyfield1: type . COLON id
   48         | type . COLON id COMMA tyfield1

    COLON  shift, and go to state 47


State 31

   49 funcDec: type COLON id LPAREN tyfield . RPAREN ASSIGN LBRACE stmlist RBRACE

    RPAREN  shift, and go to state 48


State 32

   46 tyfield: tyfield1 .

    $default  reduce using rule 46 (tyfield)


State 33

   66 lvalue: lvalue DOT id .

    $default  reduce using rule 66 (lvalue)


State 34

   53 assign: lvalue PLUS PLUS .

    $default  reduce using rule 53 (assign)


State 35

   54 assign: lvalue MINUS MINUS .

    $default  reduce using rule 54 (assign)


State 36

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


State 37

    5 exp: INT .

    $default  reduce using rule 5 (exp)


State 38

    7 exp: REAL .

    $default  reduce using rule 7 (exp)


State 39

   23 exp: LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 49
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 40

   15 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 50
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 41

    8 exp: NUL .

    $default  reduce using rule 8 (exp)


State 42

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   52 assign: lvalue ASSIGN exp .

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    $default  reduce using rule 52 (assign)


State 43

   10 exp: assignExp .

    $default  reduce using rule 10 (exp)


State 44

   22 exp: id . LPAREN explist RPAREN
   65 lvalue: id .

    LPAREN  shift, and go to state 63

    $default  reduce using rule 65 (lvalue)


State 45

    9 exp: lvalue .
   26 assignExp: lvalue . ASSIGN exp
   66 lvalue: lvalue . DOT id

    DOT     shift, and go to state 25
    ASSIGN  shift, and go to state 64

    $default  reduce using rule 9 (exp)


State 46

   57 declare: TYPE COLON id ASSIGN LBRACE tyfield . RBRACE SEMICOLON

    RBRACE  shift, and go to state 65


State 47

   47 tyfield1: type COLON . id
   48         | type COLON . id COMMA tyfield1

    ID  shift, and go to state 1

    id  go to state 66


State 48

   49 funcDec: type COLON id LPAREN tyfield RPAREN . ASSIGN LBRACE stmlist RBRACE

    ASSIGN  shift, and go to state 67


State 49

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   23    | LPAREN exp . RPAREN
   24    | exp . AND exp
   25    | exp . OR exp

    RPAREN  shift, and go to state 68
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62


State 50

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   15    | MINUS exp .
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    $default  reduce using rule 15 (exp)


State 51

   11 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 69
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 52

   12 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 70
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 53

   13 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 71
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 54

   14 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 72
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 55

   16 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 73
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 56

   17 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 74
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 57

   21 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 75
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 58

   20 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 76
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 59

   19 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 77
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 60

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 78
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 61

   24 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 79
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 62

   25 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 80
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 63

   22 exp: id LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 81
    assignExp  go to state 43
    explist    go to state 82
    id         go to state 44
    lvalue     go to state 45


State 64

   26 assignExp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 83
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 65

   57 declare: TYPE COLON id ASSIGN LBRACE tyfield RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 84


State 66

   47 tyfield1: type COLON id .
   48         | type COLON id . COMMA tyfield1

    COMMA  shift, and go to state 85

    $default  reduce using rule 47 (tyfield1)


State 67

   49 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN . LBRACE stmlist RBRACE

    LBRACE  shift, and go to state 86


State 68

   23 exp: LPAREN exp RPAREN .

    $default  reduce using rule 23 (exp)


State 69

   11 exp: exp . PLUS exp
   11    | exp PLUS exp .
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    $default  reduce using rule 11 (exp)


State 70

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   12    | exp MINUS exp .
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    $default  reduce using rule 12 (exp)


State 71

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   13    | exp TIMES exp .
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   shift, and go to state 55
    NEQ  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60
    AND  shift, and go to state 61
    OR   shift, and go to state 62

    $default  reduce using rule 13 (exp)


State 72

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   14    | exp DIVIDE exp .
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   shift, and go to state 55
    NEQ  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60
    AND  shift, and go to state 61
    OR   shift, and go to state 62

    $default  reduce using rule 14 (exp)


State 73

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   16    | exp EQ exp .
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 74

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   17    | exp NEQ exp .
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 75

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   21    | exp LT exp .
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 76

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   20    | exp LE exp .
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 77

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   19    | exp GT exp .
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 78

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   18    | exp GE exp .
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 79

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   24    | exp AND exp .
   25    | exp . OR exp

    EQ   shift, and go to state 55
    NEQ  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60

    $default  reduce using rule 24 (exp)


State 80

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   25    | exp OR exp .

    EQ   shift, and go to state 55
    NEQ  shift, and go to state 56
    LT   shift, and go to state 57
    LE   shift, and go to state 58
    GT   shift, and go to state 59
    GE   shift, and go to state 60

    $default  reduce using rule 25 (exp)


State 81

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   62 explist: exp . COMMA explist
   63        | exp .

    COMMA   shift, and go to state 87
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    $default  reduce using rule 63 (explist)


State 82

   22 exp: id LPAREN explist . RPAREN

    RPAREN  shift, and go to state 88


State 83

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   26 assignExp: lvalue ASSIGN exp .

    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62

    PLUS      [reduce using rule 26 (assignExp)]
    MINUS     [reduce using rule 26 (assignExp)]
    TIMES     [reduce using rule 26 (assignExp)]
    DIVIDE    [reduce using rule 26 (assignExp)]
    EQ        [reduce using rule 26 (assignExp)]
    NEQ       [reduce using rule 26 (assignExp)]
    LT        [reduce using rule 26 (assignExp)]
    LE        [reduce using rule 26 (assignExp)]
    GT        [reduce using rule 26 (assignExp)]
    GE        [reduce using rule 26 (assignExp)]
    AND       [reduce using rule 26 (assignExp)]
    OR        [reduce using rule 26 (assignExp)]
    $default  reduce using rule 26 (assignExp)


State 84

   57 declare: TYPE COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON .

    $default  reduce using rule 57 (declare)


State 85

   48 tyfield1: type COLON id COMMA . tyfield1

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6

    type      go to state 30
    tyfield1  go to state 89
    id        go to state 11


State 86

   49 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN LBRACE . stmlist RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 37 (stmlist)

    stm       go to state 94
    stmlist   go to state 95
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 87

   62 explist: exp COMMA . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 81
    assignExp  go to state 43
    explist    go to state 106
    id         go to state 44
    lvalue     go to state 45


State 88

   22 exp: id LPAREN explist RPAREN .

    $default  reduce using rule 22 (exp)


State 89

   48 tyfield1: type COLON id COMMA tyfield1 .

    $default  reduce using rule 48 (tyfield1)


State 90

   39 return: LPAREN . exp RPAREN RETURN
   60 while: LPAREN . exp RPAREN TO LBRACE stmlist RBRACE
   61 for: LPAREN . exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 107
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 91

   58 if: IF . LPAREN exp RPAREN THEN LBRACE stmlist RBRACE
   59   | IF . LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

    LPAREN  shift, and go to state 108


State 92

   35 stm: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 109


State 93

   36 stm: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 110


State 94

   38 stmlist: stm . stmlist

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 37 (stmlist)

    stm       go to state 94
    stmlist   go to state 111
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 95

   49 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN LBRACE stmlist . RBRACE

    RBRACE  shift, and go to state 112


State 96

   34 stm: return . SEMICOLON

    SEMICOLON  shift, and go to state 113


State 97

   27 stm: funcDec .

    $default  reduce using rule 27 (stm)


State 98

   28 stm: funcCall . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 99

   29 stm: assign . SEMICOLON

    SEMICOLON  shift, and go to state 115


State 100

   30 stm: declare .

    $default  reduce using rule 30 (stm)


State 101

   31 stm: if .

    $default  reduce using rule 31 (stm)


State 102

   32 stm: while .

    $default  reduce using rule 32 (stm)


State 103

   33 stm: for .

    $default  reduce using rule 33 (stm)


State 104

   40 type: id .
   50 funcCall: id . LPAREN RPAREN
   51         | id . LPAREN explist RPAREN
   65 lvalue: id .

    LPAREN  shift, and go to state 116

    COLON     reduce using rule 40 (type)
    $default  reduce using rule 65 (lvalue)


State 105

   52 assign: lvalue . ASSIGN exp
   53       | lvalue . PLUS PLUS
   54       | lvalue . MINUS MINUS
   66 lvalue: lvalue . DOT id

    DOT     shift, and go to state 25
    PLUS    shift, and go to state 26
    MINUS   shift, and go to state 27
    ASSIGN  shift, and go to state 28


State 106

   62 explist: exp COMMA explist .

    $default  reduce using rule 62 (explist)


State 107

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   39 return: LPAREN exp . RPAREN RETURN
   60 while: LPAREN exp . RPAREN TO LBRACE stmlist RBRACE
   61 for: LPAREN exp . RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    RPAREN  shift, and go to state 117
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62


State 108

   58 if: IF LPAREN . exp RPAREN THEN LBRACE stmlist RBRACE
   59   | IF LPAREN . exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 118
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 109

   35 stm: BREAK SEMICOLON .

    $default  reduce using rule 35 (stm)


State 110

   36 stm: CONTINUE SEMICOLON .

    $default  reduce using rule 36 (stm)


State 111

   38 stmlist: stm stmlist .

    $default  reduce using rule 38 (stmlist)


State 112

   49 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN LBRACE stmlist RBRACE .

    $default  reduce using rule 49 (funcDec)


State 113

   34 stm: return SEMICOLON .

    $default  reduce using rule 34 (stm)


State 114

   28 stm: funcCall SEMICOLON .

    $default  reduce using rule 28 (stm)


State 115

   29 stm: assign SEMICOLON .

    $default  reduce using rule 29 (stm)


State 116

   50 funcCall: id LPAREN . RPAREN
   51         | id LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    RPAREN  shift, and go to state 119
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 81
    assignExp  go to state 43
    explist    go to state 120
    id         go to state 44
    lvalue     go to state 45


State 117

   39 return: LPAREN exp RPAREN . RETURN
   60 while: LPAREN exp RPAREN . TO LBRACE stmlist RBRACE
   61 for: LPAREN exp RPAREN . FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    FROM    shift, and go to state 121
    TO      shift, and go to state 122
    RETURN  shift, and go to state 123


State 118

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   58 if: IF LPAREN exp . RPAREN THEN LBRACE stmlist RBRACE
   59   | IF LPAREN exp . RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

    RPAREN  shift, and go to state 124
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62


State 119

   50 funcCall: id LPAREN RPAREN .

    $default  reduce using rule 50 (funcCall)


State 120

   51 funcCall: id LPAREN explist . RPAREN

    RPAREN  shift, and go to state 125


State 121

   61 for: LPAREN exp RPAREN FROM . LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    LPAREN  shift, and go to state 126


State 122

   60 while: LPAREN exp RPAREN TO . LBRACE stmlist RBRACE

    LBRACE  shift, and go to state 127


State 123

   39 return: LPAREN exp RPAREN RETURN .

    $default  reduce using rule 39 (return)


State 124

   58 if: IF LPAREN exp RPAREN . THEN LBRACE stmlist RBRACE
   59   | IF LPAREN exp RPAREN . THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

    THEN  shift, and go to state 128


State 125

   51 funcCall: id LPAREN explist RPAREN .

    $default  reduce using rule 51 (funcCall)


State 126

   61 for: LPAREN exp RPAREN FROM LPAREN . exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    ID      shift, and go to state 1
    STRING  shift, and go to state 36
    INT     shift, and go to state 37
    REAL    shift, and go to state 38
    LPAREN  shift, and go to state 39
    MINUS   shift, and go to state 40
    NUL     shift, and go to state 41

    exp        go to state 129
    assignExp  go to state 43
    id         go to state 44
    lvalue     go to state 45


State 127

   60 while: LPAREN exp RPAREN TO LBRACE . stmlist RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 37 (stmlist)

    stm       go to state 94
    stmlist   go to state 130
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 128

   58 if: IF LPAREN exp RPAREN THEN . LBRACE stmlist RBRACE
   59   | IF LPAREN exp RPAREN THEN . LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE

    LBRACE  shift, and go to state 131


State 129

   11 exp: exp . PLUS exp
   12    | exp . MINUS exp
   13    | exp . TIMES exp
   14    | exp . DIVIDE exp
   16    | exp . EQ exp
   17    | exp . NEQ exp
   18    | exp . GE exp
   19    | exp . GT exp
   20    | exp . LE exp
   21    | exp . LT exp
   24    | exp . AND exp
   25    | exp . OR exp
   61 for: LPAREN exp RPAREN FROM LPAREN exp . RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    RPAREN  shift, and go to state 132
    PLUS    shift, and go to state 51
    MINUS   shift, and go to state 52
    TIMES   shift, and go to state 53
    DIVIDE  shift, and go to state 54
    EQ      shift, and go to state 55
    NEQ     shift, and go to state 56
    LT      shift, and go to state 57
    LE      shift, and go to state 58
    GT      shift, and go to state 59
    GE      shift, and go to state 60
    AND     shift, and go to state 61
    OR      shift, and go to state 62


State 130

   60 while: LPAREN exp RPAREN TO LBRACE stmlist . RBRACE

    RBRACE  shift, and go to state 133


State 131

   58 if: IF LPAREN exp RPAREN THEN LBRACE . stmlist RBRACE
   59   | IF LPAREN exp RPAREN THEN LBRACE . stmlist RBRACE ELSE LBRACE stm RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 37 (stmlist)

    stm       go to state 94
    stmlist   go to state 134
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 132

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN . TO LPAREN assign RPAREN LBRACE stmlist RBRACE

    TO  shift, and go to state 135


State 133

   60 while: LPAREN exp RPAREN TO LBRACE stmlist RBRACE .

    $default  reduce using rule 60 (while)


State 134

   58 if: IF LPAREN exp RPAREN THEN LBRACE stmlist . RBRACE
   59   | IF LPAREN exp RPAREN THEN LBRACE stmlist . RBRACE ELSE LBRACE stm RBRACE

    RBRACE  shift, and go to state 136


State 135

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO . LPAREN assign RPAREN LBRACE stmlist RBRACE

    LPAREN  shift, and go to state 137


State 136

   58 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE .
   59   | IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE . ELSE LBRACE stm RBRACE

    ELSE  shift, and go to state 138

    $default  reduce using rule 58 (if)


State 137

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN . assign RPAREN LBRACE stmlist RBRACE

    ID  shift, and go to state 1

    assign  go to state 139
    id      go to state 140
    lvalue  go to state 105


State 138

   59 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE . LBRACE stm RBRACE

    LBRACE  shift, and go to state 141


State 139

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign . RPAREN LBRACE stmlist RBRACE

    RPAREN  shift, and go to state 142


State 140

   65 lvalue: id .

    $default  reduce using rule 65 (lvalue)


State 141

   59 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE . stm RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    stm       go to state 143
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 142

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN . LBRACE stmlist RBRACE

    LBRACE  shift, and go to state 144


State 143

   59 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm . RBRACE

    RBRACE  shift, and go to state 145


State 144

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE . stmlist RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 90
    IF          shift, and go to state 91
    BREAK       shift, and go to state 92
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 93
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 37 (stmlist)

    stm       go to state 94
    stmlist   go to state 146
    return    go to state 96
    type      go to state 8
    funcDec   go to state 97
    funcCall  go to state 98
    assign    go to state 99
    declare   go to state 100
    if        go to state 101
    while     go to state 102
    for       go to state 103
    id        go to state 104
    lvalue    go to state 105


State 145

   59 if: IF LPAREN exp RPAREN THEN LBRACE stmlist RBRACE ELSE LBRACE stm RBRACE .

    $default  reduce using rule 59 (if)


State 146

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist . RBRACE

    RBRACE  shift, and go to state 147


State 147

   61 for: LPAREN exp RPAREN FROM LPAREN exp RPAREN TO LPAREN assign RPAREN LBRACE stmlist RBRACE .

    $default  reduce using rule 61 (for)
