Terminals unused in grammar

    LBRACK
    RBRACK
    ARRAY


State 93 conflicts: 13 shift/reduce
State 120 conflicts: 2 shift/reduce
State 147 conflicts: 13 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decs

    2 decs: declare
    3     | funcDec
    4     | declare decs
    5     | funcDec decs

    6 exp: INT
    7    | STRING
    8    | REAL
    9    | NUL
   10    | TRUEE
   11    | FALSEE
   12    | lvalue
   13    | assignExp
   14    | exp PLUS exp
   15    | exp MINUS exp
   16    | exp TIMES exp
   17    | exp DIVIDE exp
   18    | exp MOD exp
   19    | MINUS exp
   20    | exp EQ exp
   21    | exp NEQ exp
   22    | exp GE exp
   23    | exp GT exp
   24    | exp LE exp
   25    | exp LT exp
   26    | id LPAREN explist RPAREN
   27    | LPAREN exp RPAREN
   28    | exp AND exp
   29    | exp OR exp

   30 assignExp: lvalue ASSIGN exp

   31 stm: funcDec
   32    | funcCall SEMICOLON
   33    | assign SEMICOLON
   34    | declare
   35    | if
   36    | while
   37    | for
   38    | return SEMICOLON
   39    | BREAK SEMICOLON
   40    | CONTINUE SEMICOLON
   41    | LBRACE stmlist RBRACE

   42 stmlist: stm
   43        | stm stmlist

   44 return: RETURN LPAREN exp RPAREN

   45 type: id
   46     | VOID
   47     | INTTYPE
   48     | STRINGTYPE
   49     | REALTYPE
   50     | BOOLEAN

   51 tyfield: %empty
   52        | tyfield1

   53 tyfield1: type COLON id
   54         | type COLON id COMMA tyfield1

   55 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN stm

   56 funcCall: id LPAREN RPAREN
   57         | id LPAREN explist RPAREN

   58 assign: lvalue ASSIGN exp
   59       | lvalue PLUS PLUS
   60       | lvalue MINUS MINUS
   61       | lvalue PLUS ASSIGN exp
   62       | lvalue MINUS ASSIGN exp

   63 declare: type COLON assign SEMICOLON
   64        | type COLON lvalue SEMICOLON
   65        | TYPE COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON

   66 if: IF LPAREN exp RPAREN THEN stm
   67   | IF LPAREN exp RPAREN THEN stm ELSE stm

   68 while: LPAREN exp RPAREN TO stm

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

   70 explist: exp COMMA explist
   71        | exp

   72 id: ID

   73 lvalue: id
   74       | lvalue DOT id


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 72
    STRING <sval> (259) 7
    INT <ival> (260) 6
    REAL <fval> (261) 8
    COMMA (262) 54 70
    COLON (263) 53 54 55 63 64 65
    SEMICOLON (264) 32 33 38 39 40 63 64 65
    LPAREN (265) 26 27 44 55 56 57 66 67 68 69
    RPAREN (266) 26 27 44 55 56 57 66 67 68 69
    LBRACK (267)
    RBRACK (268)
    LBRACE (269) 41 65
    RBRACE (270) 41 65
    DOT (271) 74
    PLUS (272) 14 59 61
    MINUS (273) 15 19 60 62
    TIMES (274) 16
    DIVIDE (275) 17
    EQ (276) 20
    NEQ (277) 21
    LT (278) 25
    LE (279) 24
    GT (280) 23
    GE (281) 22
    AND (282) 28
    OR (283) 29
    ASSIGN (284) 30 55 58 61 62 65
    ARRAY (285)
    IF (286) 66 67
    THEN (287) 66 67
    ELSE (288) 67
    FROM (289) 69
    TO (290) 68 69
    BREAK (291) 39
    INTTYPE (292) 47
    STRINGTYPE (293) 48
    REALTYPE (294) 49
    CONTINUE (295) 40
    RETURN (296) 44
    TYPE (297) 65
    VOID (298) 46
    NUL (299) 9
    TRUEE (300) 10
    FALSEE (301) 11
    BOOLEAN (302) 50
    MOD (303) 18
    UMINUS (304)
    LOWER_THAN_ELSE (305)


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    program (52)
        on left: 1
        on right: 0
    decs <decList> (53)
        on left: 2 3 4 5
        on right: 1 4 5
    exp <exp> (54)
        on left: 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
        on right: 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 44 58 61 62 66 67 68 69 70 71
    assignExp <exp> (55)
        on left: 30
        on right: 13
    stm <stm> (56)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 42 43 55 66 67 68 69
    stmlist <stmList> (57)
        on left: 42 43
        on right: 41 43
    return <stm> (58)
        on left: 44
        on right: 38
    type <type> (59)
        on left: 45 46 47 48 49 50
        on right: 53 54 55 63 64
    tyfield <fieldList> (60)
        on left: 51 52
        on right: 55 65
    tyfield1 <fieldList> (61)
        on left: 53 54
        on right: 52 54
    funcDec <dec> (62)
        on left: 55
        on right: 3 5 31
    funcCall <stm> (63)
        on left: 56 57
        on right: 32
    assign <stm> (64)
        on left: 58 59 60 61 62
        on right: 33 63
    declare <dec> (65)
        on left: 63 64 65
        on right: 2 4 34
    if <stm> (66)
        on left: 66 67
        on right: 35
    while <stm> (67)
        on left: 68
        on right: 36
    for <stm> (68)
        on left: 69
        on right: 37
    explist <expList> (69)
        on left: 70 71
        on right: 26 57 70
    id <sym> (70)
        on left: 72
        on right: 26 45 53 54 55 56 57 65 73 74
    lvalue <var> (71)
        on left: 73 74
        on right: 12 30 58 59 60 61 62 64 74


State 0

    0 $accept: . program $end

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    program  go to state 8
    decs     go to state 9
    type     go to state 10
    funcDec  go to state 11
    declare  go to state 12
    id       go to state 13


State 1

   72 id: ID .

    $default  reduce using rule 72 (id)


State 2

   47 type: INTTYPE .

    $default  reduce using rule 47 (type)


State 3

   48 type: STRINGTYPE .

    $default  reduce using rule 48 (type)


State 4

   49 type: REALTYPE .

    $default  reduce using rule 49 (type)


State 5

   65 declare: TYPE . COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON

    COLON  shift, and go to state 14


State 6

   46 type: VOID .

    $default  reduce using rule 46 (type)


State 7

   50 type: BOOLEAN .

    $default  reduce using rule 50 (type)


State 8

    0 $accept: program . $end

    $end  shift, and go to state 15


State 9

    1 program: decs .

    $default  reduce using rule 1 (program)


State 10

   55 funcDec: type . COLON id LPAREN tyfield RPAREN ASSIGN stm
   63 declare: type . COLON assign SEMICOLON
   64        | type . COLON lvalue SEMICOLON

    COLON  shift, and go to state 16


State 11

    3 decs: funcDec .
    5     | funcDec . decs

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    $default  reduce using rule 3 (decs)

    decs     go to state 17
    type     go to state 10
    funcDec  go to state 11
    declare  go to state 12
    id       go to state 13


State 12

    2 decs: declare .
    4     | declare . decs

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    $default  reduce using rule 2 (decs)

    decs     go to state 18
    type     go to state 10
    funcDec  go to state 11
    declare  go to state 12
    id       go to state 13


State 13

   45 type: id .

    $default  reduce using rule 45 (type)


State 14

   65 declare: TYPE COLON . id ASSIGN LBRACE tyfield RBRACE SEMICOLON

    ID  shift, and go to state 1

    id  go to state 19


State 15

    0 $accept: program $end .

    $default  accept


State 16

   55 funcDec: type COLON . id LPAREN tyfield RPAREN ASSIGN stm
   63 declare: type COLON . assign SEMICOLON
   64        | type COLON . lvalue SEMICOLON

    ID  shift, and go to state 1

    assign  go to state 20
    id      go to state 21
    lvalue  go to state 22


State 17

    5 decs: funcDec decs .

    $default  reduce using rule 5 (decs)


State 18

    4 decs: declare decs .

    $default  reduce using rule 4 (decs)


State 19

   65 declare: TYPE COLON id . ASSIGN LBRACE tyfield RBRACE SEMICOLON

    ASSIGN  shift, and go to state 23


State 20

   63 declare: type COLON assign . SEMICOLON

    SEMICOLON  shift, and go to state 24


State 21

   55 funcDec: type COLON id . LPAREN tyfield RPAREN ASSIGN stm
   73 lvalue: id .

    LPAREN  shift, and go to state 25

    $default  reduce using rule 73 (lvalue)


State 22

   58 assign: lvalue . ASSIGN exp
   59       | lvalue . PLUS PLUS
   60       | lvalue . MINUS MINUS
   61       | lvalue . PLUS ASSIGN exp
   62       | lvalue . MINUS ASSIGN exp
   64 declare: type COLON lvalue . SEMICOLON
   74 lvalue: lvalue . DOT id

    SEMICOLON  shift, and go to state 26
    DOT        shift, and go to state 27
    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    ASSIGN     shift, and go to state 30


State 23

   65 declare: TYPE COLON id ASSIGN . LBRACE tyfield RBRACE SEMICOLON

    LBRACE  shift, and go to state 31


State 24

   63 declare: type COLON assign SEMICOLON .

    $default  reduce using rule 63 (declare)


State 25

   55 funcDec: type COLON id LPAREN . tyfield RPAREN ASSIGN stm

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    $default  reduce using rule 51 (tyfield)

    type      go to state 32
    tyfield   go to state 33
    tyfield1  go to state 34
    id        go to state 13


State 26

   64 declare: type COLON lvalue SEMICOLON .

    $default  reduce using rule 64 (declare)


State 27

   74 lvalue: lvalue DOT . id

    ID  shift, and go to state 1

    id  go to state 35


State 28

   59 assign: lvalue PLUS . PLUS
   61       | lvalue PLUS . ASSIGN exp

    PLUS    shift, and go to state 36
    ASSIGN  shift, and go to state 37


State 29

   60 assign: lvalue MINUS . MINUS
   62       | lvalue MINUS . ASSIGN exp

    MINUS   shift, and go to state 38
    ASSIGN  shift, and go to state 39


State 30

   58 assign: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 48
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 31

   65 declare: TYPE COLON id ASSIGN LBRACE . tyfield RBRACE SEMICOLON

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    $default  reduce using rule 51 (tyfield)

    type      go to state 32
    tyfield   go to state 52
    tyfield1  go to state 34
    id        go to state 13


State 32

   53 tyfield1: type . COLON id
   54         | type . COLON id COMMA tyfield1

    COLON  shift, and go to state 53


State 33

   55 funcDec: type COLON id LPAREN tyfield . RPAREN ASSIGN stm

    RPAREN  shift, and go to state 54


State 34

   52 tyfield: tyfield1 .

    $default  reduce using rule 52 (tyfield)


State 35

   74 lvalue: lvalue DOT id .

    $default  reduce using rule 74 (lvalue)


State 36

   59 assign: lvalue PLUS PLUS .

    $default  reduce using rule 59 (assign)


State 37

   61 assign: lvalue PLUS ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 55
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 38

   60 assign: lvalue MINUS MINUS .

    $default  reduce using rule 60 (assign)


State 39

   62 assign: lvalue MINUS ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 56
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 40

    7 exp: STRING .

    $default  reduce using rule 7 (exp)


State 41

    6 exp: INT .

    $default  reduce using rule 6 (exp)


State 42

    8 exp: REAL .

    $default  reduce using rule 8 (exp)


State 43

   27 exp: LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 57
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 44

   19 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 58
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 45

    9 exp: NUL .

    $default  reduce using rule 9 (exp)


State 46

   10 exp: TRUEE .

    $default  reduce using rule 10 (exp)


State 47

   11 exp: FALSEE .

    $default  reduce using rule 11 (exp)


State 48

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   58 assign: lvalue ASSIGN exp .

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 58 (assign)


State 49

   13 exp: assignExp .

    $default  reduce using rule 13 (exp)


State 50

   26 exp: id . LPAREN explist RPAREN
   73 lvalue: id .

    LPAREN  shift, and go to state 72

    $default  reduce using rule 73 (lvalue)


State 51

   12 exp: lvalue .
   30 assignExp: lvalue . ASSIGN exp
   74 lvalue: lvalue . DOT id

    DOT     shift, and go to state 27
    ASSIGN  shift, and go to state 73

    $default  reduce using rule 12 (exp)


State 52

   65 declare: TYPE COLON id ASSIGN LBRACE tyfield . RBRACE SEMICOLON

    RBRACE  shift, and go to state 74


State 53

   53 tyfield1: type COLON . id
   54         | type COLON . id COMMA tyfield1

    ID  shift, and go to state 1

    id  go to state 75


State 54

   55 funcDec: type COLON id LPAREN tyfield RPAREN . ASSIGN stm

    ASSIGN  shift, and go to state 76


State 55

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   61 assign: lvalue PLUS ASSIGN exp .

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 61 (assign)


State 56

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   62 assign: lvalue MINUS ASSIGN exp .

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 62 (assign)


State 57

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   27    | LPAREN exp . RPAREN
   28    | exp . AND exp
   29    | exp . OR exp

    RPAREN  shift, and go to state 77
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 58

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   19    | MINUS exp .
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 19 (exp)


State 59

   14 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 78
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 60

   15 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 79
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 61

   16 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 80
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 62

   17 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 81
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 63

   20 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 82
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 64

   21 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 83
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 65

   25 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 84
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 66

   24 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 85
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 67

   23 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 86
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 68

   22 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 87
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 69

   28 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 88
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 70

   29 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 89
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 71

   18 exp: exp MOD . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 90
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 72

   26 exp: id LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 91
    assignExp  go to state 49
    explist    go to state 92
    id         go to state 50
    lvalue     go to state 51


State 73

   30 assignExp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 93
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 74

   65 declare: TYPE COLON id ASSIGN LBRACE tyfield RBRACE . SEMICOLON

    SEMICOLON  shift, and go to state 94


State 75

   53 tyfield1: type COLON id .
   54         | type COLON id . COMMA tyfield1

    COMMA  shift, and go to state 95

    $default  reduce using rule 53 (tyfield1)


State 76

   55 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN . stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 102
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 77

   27 exp: LPAREN exp RPAREN .

    $default  reduce using rule 27 (exp)


State 78

   14 exp: exp . PLUS exp
   14    | exp PLUS exp .
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 14 (exp)


State 79

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   15    | exp MINUS exp .
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 15 (exp)


State 80

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   16    | exp TIMES exp .
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   shift, and go to state 63
    NEQ  shift, and go to state 64
    LT   shift, and go to state 65
    LE   shift, and go to state 66
    GT   shift, and go to state 67
    GE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 16 (exp)


State 81

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   17    | exp DIVIDE exp .
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   shift, and go to state 63
    NEQ  shift, and go to state 64
    LT   shift, and go to state 65
    LE   shift, and go to state 66
    GT   shift, and go to state 67
    GE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 17 (exp)


State 82

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   20    | exp EQ exp .
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 83

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   21    | exp NEQ exp .
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 84

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   25    | exp LT exp .
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (exp)


State 85

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   24    | exp LE exp .
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


State 86

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   23    | exp GT exp .
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


State 87

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   22    | exp GE exp .
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 88

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   28    | exp AND exp .
   29    | exp . OR exp

    EQ   shift, and go to state 63
    NEQ  shift, and go to state 64
    LT   shift, and go to state 65
    LE   shift, and go to state 66
    GT   shift, and go to state 67
    GE   shift, and go to state 68

    $default  reduce using rule 28 (exp)


State 89

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   29    | exp OR exp .

    EQ   shift, and go to state 63
    NEQ  shift, and go to state 64
    LT   shift, and go to state 65
    LE   shift, and go to state 66
    GT   shift, and go to state 67
    GE   shift, and go to state 68

    $default  reduce using rule 29 (exp)


State 90

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   18    | exp MOD exp .
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp

    EQ   shift, and go to state 63
    NEQ  shift, and go to state 64
    LT   shift, and go to state 65
    LE   shift, and go to state 66
    GT   shift, and go to state 67
    GE   shift, and go to state 68
    AND  shift, and go to state 69
    OR   shift, and go to state 70

    $default  reduce using rule 18 (exp)


State 91

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   70 explist: exp . COMMA explist
   71        | exp .

    COMMA   shift, and go to state 113
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    $default  reduce using rule 71 (explist)


State 92

   26 exp: id LPAREN explist . RPAREN

    RPAREN  shift, and go to state 114


State 93

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   30 assignExp: lvalue ASSIGN exp .

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    PLUS      [reduce using rule 30 (assignExp)]
    MINUS     [reduce using rule 30 (assignExp)]
    TIMES     [reduce using rule 30 (assignExp)]
    DIVIDE    [reduce using rule 30 (assignExp)]
    EQ        [reduce using rule 30 (assignExp)]
    NEQ       [reduce using rule 30 (assignExp)]
    LT        [reduce using rule 30 (assignExp)]
    LE        [reduce using rule 30 (assignExp)]
    GT        [reduce using rule 30 (assignExp)]
    GE        [reduce using rule 30 (assignExp)]
    AND       [reduce using rule 30 (assignExp)]
    OR        [reduce using rule 30 (assignExp)]
    MOD       [reduce using rule 30 (assignExp)]
    $default  reduce using rule 30 (assignExp)


State 94

   65 declare: TYPE COLON id ASSIGN LBRACE tyfield RBRACE SEMICOLON .

    $default  reduce using rule 65 (declare)


State 95

   54 tyfield1: type COLON id COMMA . tyfield1

    ID          shift, and go to state 1
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    type      go to state 32
    tyfield1  go to state 115
    id        go to state 13


State 96

   68 while: LPAREN . exp RPAREN TO stm
   69 for: LPAREN . stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    ID          shift, and go to state 1
    STRING      shift, and go to state 40
    INT         shift, and go to state 41
    REAL        shift, and go to state 42
    LPAREN      shift, and go to state 116
    LBRACE      shift, and go to state 97
    MINUS       shift, and go to state 44
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    NUL         shift, and go to state 45
    TRUEE       shift, and go to state 46
    FALSEE      shift, and go to state 47
    BOOLEAN     shift, and go to state 7

    exp        go to state 117
    assignExp  go to state 49
    stm        go to state 118
    return     go to state 103
    type       go to state 10
    funcDec    go to state 104
    funcCall   go to state 105
    assign     go to state 106
    declare    go to state 107
    if         go to state 108
    while      go to state 109
    for        go to state 110
    id         go to state 119
    lvalue     go to state 120


State 97

   41 stm: LBRACE . stmlist RBRACE

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 121
    stmlist   go to state 122
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 98

   66 if: IF . LPAREN exp RPAREN THEN stm
   67   | IF . LPAREN exp RPAREN THEN stm ELSE stm

    LPAREN  shift, and go to state 123


State 99

   39 stm: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 100

   40 stm: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 125


State 101

   44 return: RETURN . LPAREN exp RPAREN

    LPAREN  shift, and go to state 126


State 102

   55 funcDec: type COLON id LPAREN tyfield RPAREN ASSIGN stm .

    $default  reduce using rule 55 (funcDec)


State 103

   38 stm: return . SEMICOLON

    SEMICOLON  shift, and go to state 127


State 104

   31 stm: funcDec .

    $default  reduce using rule 31 (stm)


State 105

   32 stm: funcCall . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 106

   33 stm: assign . SEMICOLON

    SEMICOLON  shift, and go to state 129


State 107

   34 stm: declare .

    $default  reduce using rule 34 (stm)


State 108

   35 stm: if .

    $default  reduce using rule 35 (stm)


State 109

   36 stm: while .

    $default  reduce using rule 36 (stm)


State 110

   37 stm: for .

    $default  reduce using rule 37 (stm)


State 111

   45 type: id .
   56 funcCall: id . LPAREN RPAREN
   57         | id . LPAREN explist RPAREN
   73 lvalue: id .

    LPAREN  shift, and go to state 130

    COLON     reduce using rule 45 (type)
    $default  reduce using rule 73 (lvalue)


State 112

   58 assign: lvalue . ASSIGN exp
   59       | lvalue . PLUS PLUS
   60       | lvalue . MINUS MINUS
   61       | lvalue . PLUS ASSIGN exp
   62       | lvalue . MINUS ASSIGN exp
   74 lvalue: lvalue . DOT id

    DOT     shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    ASSIGN  shift, and go to state 30


State 113

   70 explist: exp COMMA . explist

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 91
    assignExp  go to state 49
    explist    go to state 131
    id         go to state 50
    lvalue     go to state 51


State 114

   26 exp: id LPAREN explist RPAREN .

    $default  reduce using rule 26 (exp)


State 115

   54 tyfield1: type COLON id COMMA tyfield1 .

    $default  reduce using rule 54 (tyfield1)


State 116

   27 exp: LPAREN . exp RPAREN
   68 while: LPAREN . exp RPAREN TO stm
   69 for: LPAREN . stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    ID          shift, and go to state 1
    STRING      shift, and go to state 40
    INT         shift, and go to state 41
    REAL        shift, and go to state 42
    LPAREN      shift, and go to state 116
    LBRACE      shift, and go to state 97
    MINUS       shift, and go to state 44
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    NUL         shift, and go to state 45
    TRUEE       shift, and go to state 46
    FALSEE      shift, and go to state 47
    BOOLEAN     shift, and go to state 7

    exp        go to state 132
    assignExp  go to state 49
    stm        go to state 118
    return     go to state 103
    type       go to state 10
    funcDec    go to state 104
    funcCall   go to state 105
    assign     go to state 106
    declare    go to state 107
    if         go to state 108
    while      go to state 109
    for        go to state 110
    id         go to state 119
    lvalue     go to state 120


State 117

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   68 while: LPAREN exp . RPAREN TO stm

    RPAREN  shift, and go to state 133
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 118

   69 for: LPAREN stm . RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    RPAREN  shift, and go to state 134


State 119

   26 exp: id . LPAREN explist RPAREN
   45 type: id .
   56 funcCall: id . LPAREN RPAREN
   57         | id . LPAREN explist RPAREN
   73 lvalue: id .

    LPAREN  shift, and go to state 135

    COLON     reduce using rule 45 (type)
    $default  reduce using rule 73 (lvalue)


State 120

   12 exp: lvalue .
   30 assignExp: lvalue . ASSIGN exp
   58 assign: lvalue . ASSIGN exp
   59       | lvalue . PLUS PLUS
   60       | lvalue . MINUS MINUS
   61       | lvalue . PLUS ASSIGN exp
   62       | lvalue . MINUS ASSIGN exp
   74 lvalue: lvalue . DOT id

    DOT     shift, and go to state 27
    PLUS    shift, and go to state 28
    MINUS   shift, and go to state 29
    ASSIGN  shift, and go to state 136

    PLUS      [reduce using rule 12 (exp)]
    MINUS     [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


State 121

   42 stmlist: stm .
   43        | stm . stmlist

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    $default  reduce using rule 42 (stmlist)

    stm       go to state 121
    stmlist   go to state 137
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 122

   41 stm: LBRACE stmlist . RBRACE

    RBRACE  shift, and go to state 138


State 123

   66 if: IF LPAREN . exp RPAREN THEN stm
   67   | IF LPAREN . exp RPAREN THEN stm ELSE stm

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 139
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 124

   39 stm: BREAK SEMICOLON .

    $default  reduce using rule 39 (stm)


State 125

   40 stm: CONTINUE SEMICOLON .

    $default  reduce using rule 40 (stm)


State 126

   44 return: RETURN LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 140
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 127

   38 stm: return SEMICOLON .

    $default  reduce using rule 38 (stm)


State 128

   32 stm: funcCall SEMICOLON .

    $default  reduce using rule 32 (stm)


State 129

   33 stm: assign SEMICOLON .

    $default  reduce using rule 33 (stm)


State 130

   56 funcCall: id LPAREN . RPAREN
   57         | id LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    RPAREN  shift, and go to state 141
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 91
    assignExp  go to state 49
    explist    go to state 142
    id         go to state 50
    lvalue     go to state 51


State 131

   70 explist: exp COMMA explist .

    $default  reduce using rule 70 (explist)


State 132

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   27    | LPAREN exp . RPAREN
   28    | exp . AND exp
   29    | exp . OR exp
   68 while: LPAREN exp . RPAREN TO stm

    RPAREN  shift, and go to state 143
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 133

   68 while: LPAREN exp RPAREN . TO stm

    TO  shift, and go to state 144


State 134

   69 for: LPAREN stm RPAREN . FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    FROM  shift, and go to state 145


State 135

   26 exp: id LPAREN . explist RPAREN
   56 funcCall: id LPAREN . RPAREN
   57         | id LPAREN . explist RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    RPAREN  shift, and go to state 141
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 91
    assignExp  go to state 49
    explist    go to state 146
    id         go to state 50
    lvalue     go to state 51


State 136

   30 assignExp: lvalue ASSIGN . exp
   58 assign: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 147
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 137

   43 stmlist: stm stmlist .

    $default  reduce using rule 43 (stmlist)


State 138

   41 stm: LBRACE stmlist RBRACE .

    $default  reduce using rule 41 (stm)


State 139

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   66 if: IF LPAREN exp . RPAREN THEN stm
   67   | IF LPAREN exp . RPAREN THEN stm ELSE stm

    RPAREN  shift, and go to state 148
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 140

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   44 return: RETURN LPAREN exp . RPAREN

    RPAREN  shift, and go to state 149
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 141

   56 funcCall: id LPAREN RPAREN .

    $default  reduce using rule 56 (funcCall)


State 142

   57 funcCall: id LPAREN explist . RPAREN

    RPAREN  shift, and go to state 150


State 143

   27 exp: LPAREN exp RPAREN .
   68 while: LPAREN exp RPAREN . TO stm

    TO  shift, and go to state 144

    $default  reduce using rule 27 (exp)


State 144

   68 while: LPAREN exp RPAREN TO . stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 151
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 145

   69 for: LPAREN stm RPAREN FROM . LPAREN exp RPAREN TO LPAREN stm RPAREN stm

    LPAREN  shift, and go to state 152


State 146

   26 exp: id LPAREN explist . RPAREN
   57 funcCall: id LPAREN explist . RPAREN

    RPAREN  shift, and go to state 153


State 147

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   30 assignExp: lvalue ASSIGN exp .
   58 assign: lvalue ASSIGN exp .

    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71

    SEMICOLON  reduce using rule 58 (assign)
    PLUS       [reduce using rule 30 (assignExp)]
    MINUS      [reduce using rule 30 (assignExp)]
    TIMES      [reduce using rule 30 (assignExp)]
    DIVIDE     [reduce using rule 30 (assignExp)]
    EQ         [reduce using rule 30 (assignExp)]
    NEQ        [reduce using rule 30 (assignExp)]
    LT         [reduce using rule 30 (assignExp)]
    LE         [reduce using rule 30 (assignExp)]
    GT         [reduce using rule 30 (assignExp)]
    GE         [reduce using rule 30 (assignExp)]
    AND        [reduce using rule 30 (assignExp)]
    OR         [reduce using rule 30 (assignExp)]
    MOD        [reduce using rule 30 (assignExp)]
    $default   reduce using rule 30 (assignExp)


State 148

   66 if: IF LPAREN exp RPAREN . THEN stm
   67   | IF LPAREN exp RPAREN . THEN stm ELSE stm

    THEN  shift, and go to state 154


State 149

   44 return: RETURN LPAREN exp RPAREN .

    $default  reduce using rule 44 (return)


State 150

   57 funcCall: id LPAREN explist RPAREN .

    $default  reduce using rule 57 (funcCall)


State 151

   68 while: LPAREN exp RPAREN TO stm .

    $default  reduce using rule 68 (while)


State 152

   69 for: LPAREN stm RPAREN FROM LPAREN . exp RPAREN TO LPAREN stm RPAREN stm

    ID      shift, and go to state 1
    STRING  shift, and go to state 40
    INT     shift, and go to state 41
    REAL    shift, and go to state 42
    LPAREN  shift, and go to state 43
    MINUS   shift, and go to state 44
    NUL     shift, and go to state 45
    TRUEE   shift, and go to state 46
    FALSEE  shift, and go to state 47

    exp        go to state 155
    assignExp  go to state 49
    id         go to state 50
    lvalue     go to state 51


State 153

   26 exp: id LPAREN explist RPAREN .
   57 funcCall: id LPAREN explist RPAREN .

    SEMICOLON  reduce using rule 57 (funcCall)
    $default   reduce using rule 26 (exp)


State 154

   66 if: IF LPAREN exp RPAREN THEN . stm
   67   | IF LPAREN exp RPAREN THEN . stm ELSE stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 156
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 155

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . MOD exp
   20    | exp . EQ exp
   21    | exp . NEQ exp
   22    | exp . GE exp
   23    | exp . GT exp
   24    | exp . LE exp
   25    | exp . LT exp
   28    | exp . AND exp
   29    | exp . OR exp
   69 for: LPAREN stm RPAREN FROM LPAREN exp . RPAREN TO LPAREN stm RPAREN stm

    RPAREN  shift, and go to state 157
    PLUS    shift, and go to state 59
    MINUS   shift, and go to state 60
    TIMES   shift, and go to state 61
    DIVIDE  shift, and go to state 62
    EQ      shift, and go to state 63
    NEQ     shift, and go to state 64
    LT      shift, and go to state 65
    LE      shift, and go to state 66
    GT      shift, and go to state 67
    GE      shift, and go to state 68
    AND     shift, and go to state 69
    OR      shift, and go to state 70
    MOD     shift, and go to state 71


State 156

   66 if: IF LPAREN exp RPAREN THEN stm .
   67   | IF LPAREN exp RPAREN THEN stm . ELSE stm

    ELSE  shift, and go to state 158

    $default  reduce using rule 66 (if)


State 157

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN . TO LPAREN stm RPAREN stm

    TO  shift, and go to state 159


State 158

   67 if: IF LPAREN exp RPAREN THEN stm ELSE . stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 160
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 159

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO . LPAREN stm RPAREN stm

    LPAREN  shift, and go to state 161


State 160

   67 if: IF LPAREN exp RPAREN THEN stm ELSE stm .

    $default  reduce using rule 67 (if)


State 161

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN . stm RPAREN stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 162
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 162

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm . RPAREN stm

    RPAREN  shift, and go to state 163


State 163

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN . stm

    ID          shift, and go to state 1
    LPAREN      shift, and go to state 96
    LBRACE      shift, and go to state 97
    IF          shift, and go to state 98
    BREAK       shift, and go to state 99
    INTTYPE     shift, and go to state 2
    STRINGTYPE  shift, and go to state 3
    REALTYPE    shift, and go to state 4
    CONTINUE    shift, and go to state 100
    RETURN      shift, and go to state 101
    TYPE        shift, and go to state 5
    VOID        shift, and go to state 6
    BOOLEAN     shift, and go to state 7

    stm       go to state 164
    return    go to state 103
    type      go to state 10
    funcDec   go to state 104
    funcCall  go to state 105
    assign    go to state 106
    declare   go to state 107
    if        go to state 108
    while     go to state 109
    for       go to state 110
    id        go to state 111
    lvalue    go to state 112


State 164

   69 for: LPAREN stm RPAREN FROM LPAREN exp RPAREN TO LPAREN stm RPAREN stm .

    $default  reduce using rule 69 (for)
